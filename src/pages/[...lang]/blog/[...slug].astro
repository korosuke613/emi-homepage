---
import blogJson from "../../../../generated/blogs.json";
import { type Languages, defaultLang, languageKeys } from "../../../i18n/ui";
import Blog from "../../../layouts/Blog.astro";
import type { BlogSchema } from "../../../utils/microcms";

export async function getStaticPaths() {
  const blogs = blogJson.contents.sort((a, b) => {
    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
  }) as BlogSchema[];

  const paths: Array<{
    params: { slug: string; lang: Languages };
    props: BlogSchema;
  }> = [];

  // 各ブログに対して、全ての言語でパスを生成（フォールバック処理のため）
  for (const blog of blogs) {
    for (const lang of languageKeys) {
      // スラッシュを除去してslugを正規化
      const normalizedSlug = blog.slug.startsWith("/")
        ? blog.slug.slice(1)
        : blog.slug;
      paths.push({
        params: { slug: normalizedSlug, lang },
        props: blog,
      });
    }
  }

  return paths;
}

const { slug, lang } = Astro.params;
const blogs = blogJson.contents as BlogSchema[];

// 現在のブログを検索（スラッシュ付き・なし両方のパターンに対応）
const currentBlog = blogs.find(
  (blog) => blog.slug === slug || blog.slug === `/${slug}`,
);

if (!currentBlog) {
  throw new Error(`Blog not found: ${slug}`);
}

// どの言語でアクセスされても、同じブログ内容を表示
// （実際のコンテンツの言語はブログデータ内で管理）
const page = currentBlog;
---

<Blog blog={page} />

