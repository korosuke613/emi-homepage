---
import type { GetStaticPathsOptions } from "astro";
import blogJson from "../../../../generated/blogs.json";
import type { Languages } from "../../../i18n/ui";
import BlogList from "../../../layouts/BlogList.astro";
import type { BlogSchema } from "../../../utils/microcms";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const blogs = blogJson.contents.sort((a, b) => {
    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
  }) as BlogSchema[];

  type BlogByLang = Record<Languages, BlogSchema[]>;
  const blogByLang: BlogByLang = {} as BlogByLang;

  for (const blog of blogs) {
    const lang: Languages = blog.language[0];

    if (lang in blogByLang) {
      blogByLang[lang].push(blog);
    } else {
      blogByLang[lang] = [blog];
    }
  }

  return Object.entries(blogByLang).flatMap(([lang, pages]) => {
    return paginate(pages, {
      pageSize: 9,
      params: { lang: lang as Languages },
    });
  });
}
---

<BlogList lang={Astro.params.lang} blogs={Astro.props.page.data} />
