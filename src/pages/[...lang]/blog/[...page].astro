---
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";
import { type Languages, defaultLang } from "../../../i18n/ui";
import { isLanguages } from "../../../i18n/utils";
import BlogList from "../../../layouts/BlogList.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  // ja の記事を抽出
  const pages = await getCollection("blog");

  type PageByLang = Record<Languages, typeof pages>;
  const pageByLang: PageByLang = {} as PageByLang;

  for (const page of pages) {
    const [rawLang, ..._] = page.slug.split("/");
    let lang: Languages = defaultLang;
    if (isLanguages(rawLang)) {
      lang = rawLang;
    }

    if (rawLang in pageByLang) {
      pageByLang[lang].push(page);
    } else {
      pageByLang[lang] = [page];
    }
  }

  return Object.entries(pageByLang).flatMap(([lang, pages]) => {
    return paginate(pages, {
      pageSize: 9,
      params: { lang: lang as Languages },
    });
  });
}

const page = Astro.props.page.data.map((page) => {
  const [_, ...slug] = page.slug.split("/");

  return { slug: slug.join("/"), data: page.data };
});

const lang = Astro.params.lang;
---

<BlogList lang={lang} blogs={page} />
